// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id                String   @id @default(cuid())
  name              String
  email             String   @unique
  password          String
  role              String   @default("pending")
  profileCompleted  Boolean  @default(false) // ✅ プロフィール完了フラグ
  children          Child[]  // ✅ 子どもとのリレーション
  createdAt         DateTime @default(now())
}

model Child {
  id         String   @id @default(cuid())
  name       String
  birthday   DateTime
  gender     String
  notes      String?         // アレルギーや特記事項など（任意）
  parent     User     @relation(fields: [parentId], references: [id])
  parentId   String             // 外部キー（保護者ID）
  createdAt  DateTime @default(now())
  reservations Reservation[]
  basicUsages   BasicUsage[] 
}

model Reservation {
  id        String   @id @default(cuid())
  date      DateTime
  type      String   // "basic" | "spot"
  options   Option[] // 🔁 1対多に変更
  child     Child    @relation(fields: [childId], references: [id], onDelete: Cascade)
  childId   String
  createdAt DateTime @default(now())
    // 🔍 よく検索される用のインデックス
  @@index([date])
  @@index([childId, date])
}

model Option {
  id            String   @id @default(cuid())
  type          String   // "lunch" | "dinner" | "school_car" | "home_car" | "lesson_car"
  count         Int      // 回数（1日1回 or 習い事送迎は複数回）
  time          String?  // お迎え時間（例: "17:15"）
  lessonName    String?  // 習い事名（必要なときだけ）
  reservation   Reservation @relation(fields: [reservationId], references: [id], onDelete: Cascade)
  reservationId String
}


model BillingSetting {
  id           String   @id @default(cuid())
  version      String   // 例: "2025春", "v1.2"
  basicPrices  Json     // { "0": 0, "1": 50000, "2": 55000, ... }
  spotPrices   Json     // { "morning": 4000, "afternoon": 5000, "full": 8000 }
  optionPrices Json     // { "lunch": 600, "dinner": 600, "school_car": 500, ... }
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model BasicUsage {
  id          String   @id @default(cuid())
  child       Child    @relation(fields: [childId], references: [id], onDelete: Cascade)
  childId     String
  month       String   // "2025-04" などの形式（Date型ではなく文字列）
  weeklyCount Int
  weekdays    Json // 例: ["月曜日", "水曜日"]
  createdAt   DateTime @default(now())

  @@unique([childId, month]) // 子どもごとに月1つの記録
}


//👇その後にやると良いこと
// 「Step1」の曜日・週利用回数を BasicUsage に保存する実装
// 請求書生成時に、BasicUsage + Reservation を月ごとに読み込んで合計を出す
// BillingSetting の適用ロジック（version選択 or 最新を自動使用）